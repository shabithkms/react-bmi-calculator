{"ast":null,"code":"var _jsxFileName = \"/home/shabithkms/react-bmi/shabithkms-bmi-calculator/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport \"./App.css\";\nimport BmiList from \"./components/BmiList\";\nimport BmiScore from \"./components/BmiScore\";\nimport Form from \"./components/Form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [show, setShow] = useState(false);\n  const [changeWeight, setChangeWeight] = useState({\n    wight: \"\",\n    type: \"\"\n  });\n  const [bmi, setBmi] = useState(\"00\");\n  const [bmiType, setBmiType] = useState(\"Not Calculated\");\n  const [bmiRange, setBmiRang] = useState({\n    underWeight: {\n      low: \"\"\n    },\n    normal: {\n      low: \"\",\n      high: \"\"\n    },\n    overWeight: {\n      low: \"\",\n      high: \"\"\n    },\n    obesityOne: {\n      low: \"\",\n      high: \"\"\n    },\n    obesityTwo: {\n      low: \"\",\n      high: \"\"\n    },\n    obesityThree: {\n      high: \"\"\n    }\n  });\n\n  const onFormSub = (w, h) => {\n    // set bmi value\n    let b = calBmi(w, h);\n    setBmi(b); // set bmi type\n\n    setBmiType(weightType(b)); // set all bmi Type\n\n    const range = {\n      underWeight: {\n        low: calWeight(18.5, h)\n      },\n      normal: {\n        low: calWeight(18.5, h),\n        high: calWeight(24.9, h)\n      },\n      overWeight: {\n        low: calWeight(25, h),\n        high: calWeight(29.9, h)\n      },\n      obesityOne: {\n        low: calWeight(30, h),\n        high: calWeight(34.9, h)\n      },\n      obesityTwo: {\n        low: calWeight(35, h),\n        high: calWeight(39.9, h)\n      },\n      obesityThree: {\n        high: calWeight(40, h)\n      }\n    }; // set bmi range to state\n\n    setBmiRang(range); // calculate the weight difference\n\n    setChangeWeight(weightChange(b, w, range)); // show all components on click\n\n    setShow(true);\n  }; // function to calculate bmi\n\n\n  const calBmi = (w, h) => (w / (h * h)).toFixed(2); // function to get weight from bmi and hight\n\n\n  const calWeight = (b, h) => (b * h * h).toFixed(2); // function to get the weight difference\n\n\n  const weightChange = (b, w, range) => {\n    let changeObj;\n\n    if (b > 24.9) {\n      changeObj = {\n        wight: (w - range.normal.high).toFixed(2),\n        type: \"positive\"\n      };\n      return changeObj;\n    } else if (b < 18.5) {\n      changeObj = {\n        wight: (range.normal.low - w).toFixed(2),\n        type: \"negative\"\n      };\n      return changeObj;\n    } else {\n      changeObj = {\n        wight: 0,\n        type: \"normal\"\n      };\n      return changeObj;\n    }\n  }; // function to get the weight type\n\n\n  const weightType = bmi => {\n    if (bmi < 18.5) {\n      return \"Underweight\";\n    } else if (18.5 < bmi && bmi < 24.9) {\n      return \"Normal\";\n    } else if (24.9 < bmi && bmi < 29.9) {\n      return \"Over Weight\";\n    } else if (29.9 < bmi && bmi < 34.9) {\n      return \"Obesity Class I\";\n    } else if (34.9 < bmi && bmi < 39.9) {\n      return \"Obesity Class II\";\n    } else if (bmi > 39.9) {\n      return \"Obesity Class III\";\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row justify-content-center mt-5 mx-2\",\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          getData: onFormSub\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), show && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row justify-content-center mt-5\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \" col-12 col-sm-6 mb-5\",\n          children: /*#__PURE__*/_jsxDEV(BmiScore, {\n            bmiNo: bmi,\n            bmiName: bmiType,\n            changeWeight: changeWeight\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \" col-12 col-sm-6 \",\n          children: /*#__PURE__*/_jsxDEV(BmiList, {\n            range: bmiRange,\n            bmi: bmi\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(App, \"78IE+YElBkaFKi5B7YS5i8EtUac=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/shabithkms/react-bmi/shabithkms-bmi-calculator/src/App.js"],"names":["useState","BmiList","BmiScore","Form","App","show","setShow","changeWeight","setChangeWeight","wight","type","bmi","setBmi","bmiType","setBmiType","bmiRange","setBmiRang","underWeight","low","normal","high","overWeight","obesityOne","obesityTwo","obesityThree","onFormSub","w","h","b","calBmi","weightType","range","calWeight","weightChange","toFixed","changeObj"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport \"./App.css\";\nimport BmiList from \"./components/BmiList\";\nimport BmiScore from \"./components/BmiScore\";\nimport Form from \"./components/Form\";\n\nfunction App() {\n  const [show, setShow] = useState(false);\n  const [changeWeight, setChangeWeight] = useState({ wight: \"\", type: \"\" });\n  const [bmi, setBmi] = useState(\"00\");\n  const [bmiType, setBmiType] = useState(\"Not Calculated\");\n  const [bmiRange, setBmiRang] = useState({\n    underWeight: { low: \"\" },\n    normal: { low: \"\", high: \"\" },\n    overWeight: { low: \"\", high: \"\" },\n    obesityOne: { low: \"\", high: \"\" },\n    obesityTwo: { low: \"\", high: \"\" },\n    obesityThree: { high: \"\" },\n  });\n  const onFormSub = (w, h) => {\n    // set bmi value\n    let b = calBmi(w, h);\n    setBmi(b);\n    // set bmi type\n    setBmiType(weightType(b));\n    // set all bmi Type\n    const range = {\n      underWeight: { low: calWeight(18.5, h) },\n      normal: { low: calWeight(18.5, h), high: calWeight(24.9, h) },\n      overWeight: { low: calWeight(25, h), high: calWeight(29.9, h) },\n      obesityOne: { low: calWeight(30, h), high: calWeight(34.9, h) },\n      obesityTwo: { low: calWeight(35, h), high: calWeight(39.9, h) },\n      obesityThree: { high: calWeight(40, h) },\n    };\n    // set bmi range to state\n    setBmiRang(range);\n    // calculate the weight difference\n    setChangeWeight(weightChange(b, w, range));\n    // show all components on click\n    setShow(true);\n  };\n  // function to calculate bmi\n  const calBmi = (w, h) => (w / (h * h)).toFixed(2);\n  // function to get weight from bmi and hight\n  const calWeight = (b, h) => (b * h * h).toFixed(2);\n  // function to get the weight difference\n  const weightChange = (b, w, range) => {\n    let changeObj;\n    if (b > 24.9) {\n      changeObj = {\n        wight: (w - range.normal.high).toFixed(2),\n        type: \"positive\",\n      };\n      return changeObj;\n    } else if (b < 18.5) {\n      changeObj = {\n        wight: (range.normal.low - w).toFixed(2),\n        type: \"negative\",\n      };\n      return changeObj;\n    } else {\n      changeObj = { wight: 0, type: \"normal\" };\n      return changeObj;\n    }\n  };\n  // function to get the weight type\n  const weightType = (bmi) => {\n    if (bmi < 18.5) {\n      return \"Underweight\";\n    } else if (18.5 < bmi && bmi < 24.9) {\n      return \"Normal\";\n    } else if (24.9 < bmi && bmi < 29.9) {\n      return \"Over Weight\";\n    } else if (29.9 < bmi && bmi < 34.9) {\n      return \"Obesity Class I\";\n    } else if (34.9 < bmi && bmi < 39.9) {\n      return \"Obesity Class II\";\n    } else if (bmi > 39.9) {\n      return \"Obesity Class III\";\n    }\n  };\n\n  return (\n    <>\n      <div className=\"container\">\n        <div className=\"row justify-content-center mt-5 mx-2\">\n          <Form getData={onFormSub} />\n        </div>\n        {show && (\n          <div className=\"row justify-content-center mt-5\">\n            <div className=\" col-12 col-sm-6 mb-5\">\n              <BmiScore\n                bmiNo={bmi}\n                bmiName={bmiType}\n                changeWeight={changeWeight}\n              />\n            </div>\n            <div className=\" col-12 col-sm-6 \">\n              <BmiList range={bmiRange} bmi={bmi} />\n            </div>\n          </div>\n        )}\n      </div>\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}